[
    //The IntChecker scheme
    {
        name:"IntChecker",
        scheme:@DictChecker({
            min_value:@IntChecker(),
            max_value:@IntChecker(),
            default:@IntChecker{
                allow_none:True
            },
            allow_none:@BoolChecker()
        },
        ["min_value","max_value","default","allow_none"])
    },
    //The FloatChecker scheme
    {
        name:"FloatChecker",
        scheme:@DictChecker({
            min_value:@FloatChecker(),
            max_value:@FloatChecker(),
            default:@FloatChecker{
                allow_none:True
            },
            allow_none:@BoolChecker()
        },["min_value","max_value","default","allow_none"])
    },
    //The StringChecker scheme
    {
        name:"StringChecker",
        scheme:@DictChecker({
            pattern:@StringChecker(),
            default:@StringChecker{
                allow_none:True
            },
            allow_none:@BoolChecker()
        },["pattern","default","allow_none"])
    },
    //The BoolChecker scheme
    {
        name:"BoolChecker",
        scheme:@DictChecker({
            default:@StringChecker{
                allow_none:True
            },
            allow_none:@BoolChecker()
        },["default","allow_none"])
    },
    //NoneChecker
    {
        name:"NoneChecker",
        scheme:@DictChecker({})
    },
    //SelfChecker
    {
        name:"SelfChecker",
        scheme:@DictChecker({
            allow_none:@BoolChecker()
        },["allow_none"])
    },
    //ObjectChecker
    {
        name:"ObjectChecker",
        scheme:@DictChecker({
            prefix:@StringChecker(),
            instance:@BoolChecker(),
            allow_none:@BoolChecker()
        },["prefix","instance","allow_none"])
    },
    //DictChecker
    {
        name:"DictChecker",
        scheme:@DictChecker({
            checker_dict:@DictChecker{
                unlimit:True
            },
            optional:@ListChecker(@StringChecker()),
            unlimit:@BoolChecker(),
            allow_none:@BoolChecker()
        },["checker_dict","optional","unlimit","allow_none"])
    },
    //ParamsChecker
    {
        name:"ParamsChecker",
        scheme:@DictChecker({
            checker_list:@ListChecker(),
            optional:@ListChecker(@StringChecker())
        },["checker_list","optional"])
    },
    //ListChecker
    {
        name:"ListChecker",
        scheme:@DictChecker({
            element_checker:@ObjectChecker(),
            max_numbers:@IntChecker(),
            allow_none:@BoolChecker()
        },["element_checker","max_numbers","allow_none"])
    },
    //EnumChecker
    {
        name:"EnumChecker",
        scheme:@DictChecker({
            enums:@ListChecker(),
            instance:@BoolChecker()
        },["instance"])
    },
    //Empty
    {
        name:"Empty",
        scheme:@DictChecker()
    },
    //PysonObjectName
    {
        name:"PysonObjectName",
        scheme:@DictChecker({
            object_name:@StringChecker()
        })
    }
]