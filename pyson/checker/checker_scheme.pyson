[
    //The checker@int scheme
    {
        name:"checker.int",
        scheme:@checker.dict({
            min_value:@checker.int(),
            max_value:@checker.int(),
            defualt:@checker.int{
                allow_none:True
            },
            allow_none:@checker.bool()
        },
        ["min_value","max_value","defualt"])
    },
    //The checker@float scheme
    {
        name:"checker.float",
        scheme:@checker.dict({
            min_value:@checker.float(),
            max_value:@checker.float(),
            defualt:@checker.float{
                allow_none:True
            },
            allow_none:@checker.bool()
        },["min_value","max_value","defualt"])
    },
    //The checker string scheme
    {
        name:"checker.string",
        scheme:@checker.dict({
            pattern:@checker.string(),
            default:@checker.string{
                allow_none:True
            },
            allow_none:@checker.bool()
        },["pattern","defualt","allow_none"])
    },
    //The checker bool scheme
    {
        name:"checker.bool",
        scheme:@checker.dict({
            defualt:@checker.string{
                allow_none:True
            },
            allow_none:@checker.bool()
        },["default","allow_none"])
    },
    //none checker
    {
        name:"checker.none",
        scheme:@checker.dict({})
    },
    //ctx checker
    {
        name:"checker.self",
        scheme:@checker.dict({
            allow_none:@checker.bool()
        },["allow_none"])
    },
    //object checker
    {
        name:"checker.object",
        scheme:@checker.dict({
            pattern:@checker.string(),
            default:@checker.object(),
            allow_none:@checker.bool()
        },["pattern","instance","allow_none"])
    },
    //dict checker
    {
        name:"checker.dict",
        scheme:@checker.dict({
            scheme:@checker.dict{
                unlimit:True
            },
            optional:@checker.list(@checker.string()),
            unlimit:@checker.bool(),
            allow_none:@checker.bool()
        })
    },
    //list checker
    {
        name:"checker.list",
        scheme:@checker.dict({
            element_checker:@checker.object("@checker.*"),
            max_numbers:@checker.int(),
            allow_none:@checker.bool()
        },["element_checker","max_numbers","allow_none"])
    },
    //enum_checker
    {
        name:"checker.enum",
        scheme:@checker.dict({
            enums:@checker.list(None),
            instance:@checker.bool()
        },["instance"])
    }
]